[{"/Users/berkayoruc/hexagis-react/src/index.js":"1","/Users/berkayoruc/hexagis-react/src/App.js":"2","/Users/berkayoruc/hexagis-react/src/reportWebVitals.js":"3","/Users/berkayoruc/hexagis-react/src/components/CustomEditControl.js":"4"},{"size":500,"mtime":1611252851979,"results":"5","hashOfConfig":"6"},{"size":2998,"mtime":1613210874893,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611252851979,"results":"8","hashOfConfig":"6"},{"size":4407,"mtime":1611257687163,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"197vatg",{"filePath":"13","messages":"14","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/berkayoruc/hexagis-react/src/index.js",[],["20","21"],"/Users/berkayoruc/hexagis-react/src/App.js",["22","23","24","25","26","27","28","29","30","31","32","33","34","35"],"/Users/berkayoruc/hexagis-react/src/reportWebVitals.js",[],"/Users/berkayoruc/hexagis-react/src/components/CustomEditControl.js",["36","37","38"],"// Refactored v3 CustomEditControl.js file\nimport { useEffect, useRef } from 'react';\nimport { PropTypes } from 'prop-types';\nimport Draw from 'leaflet-draw'; // eslint-disable-line\nimport isEqual from 'lodash/isEqual';\n\nimport { useLeafletContext } from '@react-leaflet/core';\nimport leaflet, { Map, Control } from 'leaflet';\n\nconst eventHandlers = {\n  onEdited: 'draw:edited',\n  onDrawStart: 'draw:drawstart',\n  onDrawStop: 'draw:drawstop',\n  onDrawVertex: 'draw:drawvertex',\n  onEditStart: 'draw:editstart',\n  onEditMove: 'draw:editmove',\n  onEditResize: 'draw:editresize',\n  onEditVertex: 'draw:editvertex',\n  onEditStop: 'draw:editstop',\n  onDeleted: 'draw:deleted',\n  onDeleteStart: 'draw:deletestart',\n  onDeleteStop: 'draw:deletestop',\n};\n\nfunction CustomEditControl(props) {\n    const context = useLeafletContext()\n    const controlRef = useRef()\n    const propsRef = useRef(props)\n\n    const onDrawCreate = (e) => {    \n        context.layerContainer.addLayer(e.layer);\n        props.onCreated && props.onCreated(e);\n    };\n\n    useEffect(() => {          \n        for (const key in eventHandlers) {\n            context.map.on(eventHandlers[key], (evt) => {\n                let handlers = Object.keys(eventHandlers).filter(handler => eventHandlers[handler] === evt.type);\n                if (handlers.length === 1) {\n                    let handler = handlers[0];\n                    props[handler] && props[handler](evt);\n                }\n            })\n        }\n\n        context.map.on(leaflet.Draw.Event.CREATED, onDrawCreate);\n        const options = {\n            edit: {\n                ...props.edit,\n                featureGroup: context.layerContainer\n            }\n        }\n        if (props.draw) {\n            options.draw = { ...props.draw };\n        }\n        if (props.position) {\n            options.position = props.position;\n        }\n\n        controlRef.current = new Control.Draw(options);\n        controlRef.current.addTo(context.map);\n        props.onMounted && props.onMounted(controlRef.current);\n\n        return () => {\n            context.map.off(leaflet.Draw.Event.CREATED, onDrawCreate);\n        \n            for (const key in eventHandlers) {\n              if (props[key]) {\n                context.map.off(eventHandlers[key], props[key]);\n              }\n            }\n        }\n    }, [])\n\n    useEffect(() => {\n        // If the props haven't changed, don't update\n        if (\n            isEqual(props.draw, propsRef.current.draw)\n            && isEqual(props.edit, propsRef.current.edit)\n            && props.position === propsRef.current.position\n        ) {\n            return false;\n        }\n\n        const options = {\n            edit: {\n                ...props.edit,\n                featureGroup: context.layerContainer\n            }\n        }\n        if (props.draw) {\n            options.draw = { ...props.draw };\n        }\n        if (props.position) {\n            options.position = props.position;\n        }\n\n        controlRef.current.remove(context.map);\n        controlRef.current = new Control.Draw(options);\n        controlRef.current.addTo(context.map);\n\n        // Remount the new draw control\n        props.onMounted && props.onMounted(controlRef.current);\n        propsRef.current = props\n    }, [props.draw, props.edit, props.position])\n\n    return null;\n}\n\nCustomEditControl.propTypes = {\n    ...Object.keys(eventHandlers).reduce((acc, val) => {\n        acc[val] = PropTypes.func;\n        return acc;\n    }, {}),\n    onCreated: PropTypes.func,\n    onMounted: PropTypes.func,\n    draw: PropTypes.shape({\n        polyline: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n        polygon: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n        rectangle: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n        circle: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n        marker: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    }),\n    edit: PropTypes.shape({\n        edit: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n        remove: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n        poly: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n        allowIntersection: PropTypes.bool,\n    }),\n    position: PropTypes.oneOf([\n        'topright',\n        'topleft',\n        'bottomright',\n        'bottomleft'\n    ]),\n};\n\nexport default CustomEditControl;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":10,"nodeType":"45","messageId":"46","endLine":2,"endColumn":22},{"ruleId":"43","severity":1,"message":"47","line":2,"column":24,"nodeType":"45","messageId":"46","endLine":2,"endColumn":33},{"ruleId":"43","severity":1,"message":"48","line":2,"column":35,"nodeType":"45","messageId":"46","endLine":2,"endColumn":41},{"ruleId":"43","severity":1,"message":"49","line":2,"column":43,"nodeType":"45","messageId":"46","endLine":2,"endColumn":48},{"ruleId":"43","severity":1,"message":"50","line":2,"column":50,"nodeType":"45","messageId":"46","endLine":2,"endColumn":62},{"ruleId":"43","severity":1,"message":"51","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":25},{"ruleId":"43","severity":1,"message":"52","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":26},{"ruleId":"43","severity":1,"message":"53","line":12,"column":9,"nodeType":"45","messageId":"46","endLine":12,"endColumn":28},{"ruleId":"43","severity":1,"message":"54","line":13,"column":10,"nodeType":"45","messageId":"46","endLine":13,"endColumn":19},{"ruleId":"43","severity":1,"message":"55","line":15,"column":9,"nodeType":"45","messageId":"46","endLine":15,"endColumn":19},{"ruleId":"43","severity":1,"message":"56","line":26,"column":9,"nodeType":"45","messageId":"46","endLine":26,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":29,"column":59,"nodeType":"59","messageId":"60","endLine":29,"endColumn":61},{"ruleId":"43","severity":1,"message":"61","line":39,"column":9,"nodeType":"45","messageId":"46","endLine":39,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":42,"column":46,"nodeType":"59","messageId":"60","endLine":42,"endColumn":48},{"ruleId":"43","severity":1,"message":"62","line":8,"column":19,"nodeType":"45","messageId":"46","endLine":8,"endColumn":22},{"ruleId":"63","severity":1,"message":"64","line":73,"column":8,"nodeType":"65","endLine":73,"endColumn":10,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":105,"column":8,"nodeType":"65","endLine":105,"endColumn":48,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'MapContainer' is defined but never used.","Identifier","unusedVar","'TileLayer' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'FeatureGroup' is defined but never used.","'CustomEditControl' is defined but never used.","'MarkerClusterGroup' is defined but never used.","'filteredChargerData' is assigned a value but never used.","'mapLayers' is assigned a value but never used.","'_onCreated' is assigned a value but never used.","'_onEdited' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'_onDeleted' is assigned a value but never used.","'Map' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'context.layerContainer', 'context.map', 'onDrawCreate', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["71"],"React Hook useEffect has missing dependencies: 'context.layerContainer', 'context.map', and 'props'. Either include them or remove the dependency array.",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [context.layerContainer, context.map, onDrawCreate, props]",{"range":"77","text":"78"},"Update the dependencies array to be: [context.layerContainer, context.map, props, props.draw, props.edit, props.position]",{"range":"79","text":"80"},[2329,2331],"[context.layerContainer, context.map, onDrawCreate, props]",[3265,3305],"[context.layerContainer, context.map, props, props.draw, props.edit, props.position]"]