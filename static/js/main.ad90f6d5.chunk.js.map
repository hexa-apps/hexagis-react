{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","filteredChargerData","chargerData","filter","charger","address","country","MapContainer","center","zoom","maxZoom","TileLayer","url","attribution","map","Marker","position","gps","latitude","longitude","Popup","name","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"49wkCA4BeA,MAvBf,WACE,IAAMC,EAAsBC,EAAYC,QAAO,SAAAC,GAAO,MAAgC,mBAA5BA,EAAQC,QAAQC,WAE1E,OACE,eAACC,EAAA,EAAD,CAAcC,OAAQ,CAAC,GAAM,IAAOC,KAAM,EAAGC,QAAS,GAAtD,UACE,cAACC,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,2EAGd,cAAC,IAAD,UACGZ,EAAoBa,KAAI,SAACV,GAAD,OACvB,cAACW,EAAA,EAAD,CAAyBC,SAAU,CAACZ,EAAQa,IAAIC,SAAUd,EAAQa,IAAIE,WAAtE,SACE,cAACC,EAAA,EAAD,UACGhB,EAAQiB,QAFAjB,EAAQkB,aCLhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ad90f6d5.chunk.js","sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\nimport chargerData from \"./data/charger.json\";\nimport \"./App.css\";\n\nfunction App() {\n  const filteredChargerData = chargerData.filter(charger => charger.address.country === \"United Kingdom\")\n\n  return (\n    <MapContainer center={[51.0, 19.0]} zoom={4} maxZoom={18}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n\n      <MarkerClusterGroup>\n        {filteredChargerData.map((charger) => (\n          <Marker key={charger.id} position={[charger.gps.latitude, charger.gps.longitude]} >\n            <Popup>\n              {charger.name}\n            </Popup>\n          </Marker>\n        ))}\n      </MarkerClusterGroup>\n    </MapContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}